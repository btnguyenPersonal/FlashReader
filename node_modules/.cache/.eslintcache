[{"/home/ben/git/FlashReader/src/index.js":"1","/home/ben/git/FlashReader/src/App.js":"2","/home/ben/git/FlashReader/src/Reader.js":"3","/home/ben/git/FlashReader/src/Book.js":"4"},{"size":174,"mtime":1632156649710,"results":"5","hashOfConfig":"6"},{"size":222,"mtime":1631543107183,"results":"7","hashOfConfig":"6"},{"size":3944,"mtime":1633966927350,"results":"8","hashOfConfig":"6"},{"size":14621881,"mtime":1633963701737,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1210oh6",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ben/git/FlashReader/src/index.js",[],"/home/ben/git/FlashReader/src/App.js",[],"/home/ben/git/FlashReader/src/Reader.js",["19","20"],"import React, { useState, useEffect } from 'react';\nimport { book } from './Book.js';\nimport moment from 'moment';\nimport './App.css';\nimport mousetrap from 'mousetrap';\n\nlet chapter =\n  parseInt(localStorage.getItem('bookmark')) > 0\n  && parseInt(localStorage.getItem('bookmark')) < 1600\n    ? parseInt(localStorage.getItem('bookmark'))\n    :1\nlet speed = 200;\nlet index = 0;\nlet counter = 0;\nlet i = 0;\n\nfunction incrementIndex() {\n  index++;\n  return true;\n}\n\nfunction Reader() {\n  //keybindings\n  mousetrap.bind('k', function() {pause()});\n  mousetrap.bind('space', function() {pause(); return false});\n  mousetrap.bind('l', function() {skipAhead()});\n  mousetrap.bind('j', function() {skipBack()});\n  mousetrap.bind('-', function() {slower()});\n  mousetrap.bind('=', function() {faster()});\n  mousetrap.bind('s', function() {slower()});\n  mousetrap.bind('f', function() {faster()});\n  mousetrap.bind('up', function() {skipAhead(); return false});\n  mousetrap.bind('down', function() {skipBack(); return false});\n  mousetrap.bind('left', function() {setChapter(currentChapter - 1)});\n  mousetrap.bind('right', function() {setChapter(currentChapter + 1)});\n\n  function pause() {\n    if (isPaused) {\n      setIsPaused(false);\n    } else {\n      setIsPaused(true);\n    }\n  }\n\n  function faster() {\n    if (counter < 20) {\n      counter++;\n      speed /= 1.1;\n      speed = Math.floor(speed + 0.5);\n    }\n  }\n\n  function slower() {\n    if (counter > -20) {\n      counter--;\n      speed *= 1.1;\n      speed = Math.floor(speed + 0.5);\n    }\n  }\n\n  function skipAhead() {\n    index += 50;\n  }\n\n  function skipBack() {\n    index < 50 ? index = 0 : index -= 50;\n  }\n\n  function setChapter(c) {\n    index = 0;\n    localStorage.setItem('bookmark', JSON.stringify(c));\n    setCurrentChapter(c);\n    setLastTime(moment());\n  }\n\n  function getWord(time, lastIndex, isPaused) {\n    if ((1 < Math.floor((time - lastTime) / speed)) && !isPaused) {\n      if ( index < words.length - 2 ) {\n        incrementIndex(); \n        setLastTime(moment());\n      } else {\n        setChapter(currentChapter + 1);\n      }\n    }\n    return words[index]\n  }\n\n  function getWPM() {\n    return Math.floor(60 * (1000 / speed));\n  }\n\n  const [currentChapter, setCurrentChapter] = useState(chapter);\n  let words = book.chapter[currentChapter - 1].content.split(/\\s/);\n  const [time, setTime] = useState(moment());\n  const [isPaused, setIsPaused] = useState(false);\n  const [lastTime, setLastTime] = useState(moment());\n  let content = (\n      <div className=\"columns\">\n        <button className=\"button\" onClick={() => { setChapter(currentChapter - 1) }}>{'<'}</button>\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            { book.chapter[currentChapter - 1].title }\n          </div>\n          <div className=\"panel-body\">\n            <h2>\n              { getWord(time, lastTime, isPaused) }\n            </h2>\n            <button className=\"mediaButton\" onClick={() => { skipBack() }}>{'<<'}</button>\n            <button className=\"mediaButton\" onClick={() => { slower() }}>slower</button>\n            <button className=\"mediaButton\" onClick={() => { pause() }}>{ isPaused ? '>' : '||' }</button>\n            <button className=\"mediaButton\" onClick={() => { faster() }}>faster</button>\n            <button className=\"mediaButton\" onClick={() => { skipAhead() }}>{'>>'}</button>\n            <div className=\"valueIndicator\">Progress: {Math.floor(100 * index/words.length)}%</div>\n            <div className=\"valueIndicator\">Speed: {getWPM()} WPM</div>\n            <div className=\"valueIndicator\">Level: {counter < 20 ? counter : 'MAX'}</div>\n          </div>\n        </div>\n        <button className=\"button\" onClick={() => { setChapter(currentChapter + 1) }}>{'>'}</button>\n      </div>\n  );\n  useEffect(() => {\n      const interval = setInterval(() => setTime(moment()), 1);\n  }, []);\n\n  return content;\n}\n\nexport default Reader;\n\n","/home/ben/git/FlashReader/src/Book.js",[],{"ruleId":"21","severity":1,"message":"22","line":15,"column":5,"nodeType":"23","messageId":"24","endLine":15,"endColumn":6},{"ruleId":"21","severity":1,"message":"25","line":122,"column":13,"nodeType":"23","messageId":"24","endLine":122,"endColumn":21},"no-unused-vars","'i' is assigned a value but never used.","Identifier","unusedVar","'interval' is assigned a value but never used."]
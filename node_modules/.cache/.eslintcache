[{"/home/ben/git/FlashReader/src/index.js":"1","/home/ben/git/FlashReader/src/reportWebVitals.js":"2","/home/ben/git/FlashReader/src/App.js":"3","/home/ben/git/FlashReader/src/Reader.js":"4","/home/ben/git/FlashReader/src/Book.js":"5"},{"size":455,"mtime":1631543107243,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1631543107243,"results":"8","hashOfConfig":"7"},{"size":222,"mtime":1631543107183,"results":"9","hashOfConfig":"7"},{"size":2961,"mtime":1631552977224,"results":"10","hashOfConfig":"7"},{"size":14795884,"mtime":1631543107243,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15ruwq1",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ben/git/FlashReader/src/index.js",[],"/home/ben/git/FlashReader/src/reportWebVitals.js",[],"/home/ben/git/FlashReader/src/App.js",[],"/home/ben/git/FlashReader/src/Reader.js",["23","24"],"import React, { useState, useEffect } from 'react';\nimport { book } from './Book.js';\nimport moment from 'moment';\nimport './App.css';\n\nlet chapter =\n  parseInt(localStorage.getItem('bookmark')) > 0\n  && parseInt(localStorage.getItem('bookmark')) < 1600\n    ? parseInt(localStorage.getItem('bookmark'))\n    :1\nlet speed = 200;\nlet index = 0;\nlet counter = 0;\nlet i = 0;\n\nfunction incrementIndex() {\n  index++;\n  return true;\n}\n\nfunction Reader() {\n\n  function faster() {\n    if (counter < 20) {\n      counter++;\n      speed /= 1.1;\n      speed = Math.floor(speed + 0.5);\n    }\n  }\n  function slower() {\n    if (counter > -20) {\n      counter--;\n      speed *= 1.1;\n      speed = Math.floor(speed + 0.5);\n    }\n  }\n  function skipAhead() {\n    index += 50;\n  }\n  function skipBack() {\n    index < 50 ? index = 0 : index -= 50;\n  }\n  function setChapter(c) {\n    index = 0;\n    localStorage.setItem('bookmark', JSON.stringify(c));\n    setCurrentChapter(c);\n    setLastTime(moment());\n  }\n  const [currentChapter, setCurrentChapter] = useState(chapter);\n  let words = book.chapter[currentChapter - 1].content.split(/\\s/);\n  const [time, setTime] = useState(moment());\n  const [isPaused, setIsPaused] = useState(false);\n  const [lastTime, setLastTime] = useState(moment());\n  let content = (\n      <div className=\"columns\">\n        <button className=\"button\" onClick={() => { setChapter(currentChapter - 1) }}>{'<'}</button>\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            { book.chapter[currentChapter - 1].title }\n          </div>\n          <div class=\"panel-body\">\n            <h2>\n              { \n                1 < Math.floor((time - lastTime) / speed) && !isPaused\n                ? index <= words.length + 1 ? incrementIndex() && words[index] && setLastTime(moment()) : setChapter(currentChapter + 1)\n                : words[index]\n              }\n            </h2>\n            <button className=\"mediaButton\" onClick={() => { skipBack() }}>{'<<'}</button>\n            <button className=\"mediaButton\" onClick={() => { slower() }}>slower</button>\n            <button className=\"mediaButton\" onClick={() => { isPaused ? setIsPaused(false) : setIsPaused(true) }}>{ isPaused ? '>' : '||' }</button>\n            <button className=\"mediaButton\" onClick={() => { faster() }}>faster</button>\n            <button className=\"mediaButton\" onClick={() => { skipAhead() }}>{'>>'}</button>\n            <div className=\"speedIndicator\">{counter < 20 ? counter : 'MAX'}</div>\n            <div className=\"speedIndicator\">{Math.floor(100 * index/words.length) + '%'}</div>\n            <div className=\"speedIndicator\">{currentChapter}</div>\n          </div>\n        </div>\n        <button className=\"button\" onClick={() => { setChapter(currentChapter + 1) }}>{'>'}</button>\n      </div>\n  );\n  useEffect(() => {\n      const interval = setInterval(() => setTime(moment()), 1);\n  }, []);\n\n  return content;\n}\n\nexport default Reader;\n\n","/home/ben/git/FlashReader/src/Book.js",[],{"ruleId":"25","severity":1,"message":"26","line":14,"column":5,"nodeType":"27","messageId":"28","endLine":14,"endColumn":6},{"ruleId":"25","severity":1,"message":"29","line":83,"column":13,"nodeType":"27","messageId":"28","endLine":83,"endColumn":21},"no-unused-vars","'i' is assigned a value but never used.","Identifier","unusedVar","'interval' is assigned a value but never used."]